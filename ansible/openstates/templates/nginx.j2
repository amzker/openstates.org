uwsgi_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=2g inactive=60m use_temp_path=off;

server {
    server_name www.openstates.org beta.openstates.org;
    return 301 https://openstates.org$request_uri;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/openstates.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/openstates.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    listen 443 ssl http2;
    server_name www.openstates.org beta.openstates.org;
    return 301 https://openstates.org$request_uri;
    ssl_certificate /etc/letsencrypt/live/openstates.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/openstates.org/privkey.pem; # managed by Certbot
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_dhparam /etc/nginx/certs/dhparams.pem;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security "max-age=31536000" always;

}

server {
    server_name openstates.org;

    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/openstates.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/openstates.org/privkey.pem; # managed by Certbot
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_dhparam /etc/nginx/certs/dhparams.pem;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
        uwsgi_pass unix:///home/openstates/uwsgi.sock;
        include uwsgi_params;
        uwsgi_cache_key $request_method$request_uri$http_x_api_key;
        uwsgi_cache_methods GET;
        uwsgi_cache_valid 200 10m;
        uwsgi_cache_valid 301 302 404 2h;
        uwsgi_cache_valid any     1m;
        uwsgi_cache my_cache;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Cache-Status $upstream_cache_status;
        expires 2h;
    }

      # no caching for accounts
      location /accounts {
          uwsgi_pass unix:///home/openstates/uwsgi.sock;
          include uwsgi_params;
          add_header Strict-Transport-Security "max-age=31536000" always;
          add_header X-Cache-Status $upstream_cache_status;
          expires -1;
      }

    # long cache time for static files
    location /static {
        uwsgi_pass unix:///home/openstates/uwsgi.sock;
        include uwsgi_params;
        uwsgi_cache_key $request_method$request_uri$http_x_api_key;
        uwsgi_cache_methods GET;
        uwsgi_cache_valid 200 2h;
        uwsgi_cache_valid 301 302 404 2h;
        uwsgi_cache_valid any     1m;
        uwsgi_cache my_cache;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Cache-Status $upstream_cache_status;
        expires max;
    }

    # for legacy js/css
    location /media {
        proxy_pass https://legacy.openstates.org/media/;
    }

    # various static files
    location /robots.txt {
        alias /home/openstates/robots.txt;
    }
    location /favicon.ico {
        alias /home/openstates/src/openstates.org/static/images/favicon/favicon.ico;
    }
    # location /.well-known/ {
    #     root /home/openstates/letsencrypt/;
    # }

}

server {
    server_name open.pluralpolicy.com;

    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/openstates.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/openstates.org/privkey.pem; # managed by Certbot
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_dhparam /etc/nginx/certs/dhparams.pem;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
        uwsgi_pass unix:///home/openstates/uwsgi.sock;
        include uwsgi_params;
        uwsgi_cache_key $request_method$request_uri$http_x_api_key;
        uwsgi_cache_methods GET;
        uwsgi_cache_valid 200 10m;
        uwsgi_cache_valid 301 302 404 2h;
        uwsgi_cache_valid any     1m;
        uwsgi_cache my_cache;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Cache-Status $upstream_cache_status;
        expires 2h;
    }

      # no caching for accounts
      location /accounts {
          uwsgi_pass unix:///home/openstates/uwsgi.sock;
          include uwsgi_params;
          add_header Strict-Transport-Security "max-age=31536000" always;
          add_header X-Cache-Status $upstream_cache_status;
          expires -1;
      }

    # long cache time for static files
    location /static {
        uwsgi_pass unix:///home/openstates/uwsgi.sock;
        include uwsgi_params;
        uwsgi_cache_key $request_method$request_uri$http_x_api_key;
        uwsgi_cache_methods GET;
        uwsgi_cache_valid 200 2h;
        uwsgi_cache_valid 301 302 404 2h;
        uwsgi_cache_valid any     1m;
        uwsgi_cache my_cache;
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Cache-Status $upstream_cache_status;
        expires max;
    }

    # for legacy js/css
    location /media {
        proxy_pass https://legacy.openstates.org/media/;
    }

    # various static files
    location /robots.txt {
        alias /home/openstates/robots.txt;
    }
    location /favicon.ico {
        alias /home/openstates/src/openstates.org/static/images/favicon/favicon.ico;
    }
    # location /.well-known/ {
    #     root /home/openstates/letsencrypt/;
    # }

}

server {
    if ($host = open.pluralpolicy.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = www.openstates.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = openstates.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 default_server;
    server_name openstates.org www.openstates.org beta.openstates.org open.pluralpolicy.com;
    return 404; # managed by Certbot
}
